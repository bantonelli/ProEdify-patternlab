// ==========================================================================
// RADIO BUTTON STYLES
// ==========================================================================
// BEVM STRUCTURE: radio, radio__input, radio__label, radio__inside


// PSEUDO CLASSES 
// ==========================================================================
%radio {
    // Base radio button rules
    display: inline-block;
    position: relative;
    width: 100%;
}

%radio__input {
    display: none;
    position: absolute;
    visibility: hidden;
}

%radio__label {
    display: inline-block;
    position: relative;
    transition-duration: 0.25s;
    transition-property: color;
    transition-timing-function: $timing-function;
    cursor: pointer;
    vertical-align: top;        
}

%radio__fill {
    display: inline-block;
    position: relative;
    transition-duration: .25s;
    transition-property: border;
    transition-timing-function: $timing-function;
    border-style: solid;
    border-radius: 100%;

    &::before {
        display: inline-block;
        position: absolute;
        top: 50%;  // position the top  edge of the element at the middle of the parent 
        left: 50%; // position the left edge of the element at the middle of the parent   
        transition-duration: .25s;
        transition-property: background, box-shadow;
        transition-timing-function: $timing-function;              
        border-radius: 100%;               
        content: '';
    }
}


// MIXINS
// ==========================================================================
@mixin radio-color(
    $label-color: nth($pe-greyscale-color-list, 4), 
    $label-color-hover: $pe-color-grey, 
    $fill-border: nth($pe-greyscale-color-list, 4),
    $fill-border-hover: $pe-color-grey, 
    $fill-color: nth($pe-primary-color-list, 3),
    $fill-shadow: nth($pe-greyscale-color-list, 2),
    $fill-before-shadow: nth($pe-greyscale-color-list, 2)
    ) {        
    color: $label-color;

    &:hover > .radio__label {
        color: $label-color-hover;
    }

    &:hover > .radio__fill {
        // border-color: nth($pe-greyscale-color-list, 3);
        border-color: $fill-border-hover;
    }

    .radio__fill {
        border-color: $fill-border;
        box-shadow: 0 0 1px $fill-shadow;

        &::before {
            background-color: $pe-color-transparent;
            box-shadow: 0 1px 1px $pe-color-transparent; 
        }
    }

    .radio__input {
        &:checked + .radio__fill {
            &::before {
                background-color: $fill-color;
                box-shadow: 0 1px 1px $fill-before-shadow;
            }
        }
    }
        
}

@mixin radio-size($size) {
    height: $size;

    &:hover > .radio__fill {
        @if $size <= $pe-base-fontsize {
            border-width: $size / 3;  
        } @else if $size > ($pe-base-fontsize * 2) {
            border-width: $size / 5;
        } @else {            
            border-width: $size / 4;
        } 
    }
}

@mixin radio-label-size($size) {
    height: $size;
    margin-left: -$size;
    padding-left: $size + 10px;
    line-height: $size;                
    @if $size <= ($pe-base-fontsize * 1.3) {
        @include font-sizing-sub-paragraph(); 
    } @else if $size > ($pe-base-fontsize * 2) {  
        @include font-sizing-h4(); 
    } @else {
        @include font-sizing-h6();
    }    
}

@mixin radio-fill-size ($size) {
    width: $size;
    height: $size;

    @if $size <= $pe-base-fontsize {
        border-width: $size / 6;          
    } @else if $size > ($pe-base-fontsize * 2) {
        border-width: $size / 10;
    } @else {            
        border-width: $size / 8;
    }
    

    &::before {
        @if $size <= ($pe-base-fontsize) {
            width: $size / 2;   
            height: $size / 2;
            transform: translate(-50%, -51.5%) scale(0.7);
        } @else if $size > ($pe-base-fontsize * 2) {
            width: (3 * $size) / 5;
            height: (3 * $size) / 5;
            transform: translate(-50%, -50.5%) scale(0.7);
        } @else {
            width: (11 * $size) / 20;
            height: (11 * $size) / 20;
            transform: translate(-50%, -52%) scale(0.7);
        }                   
    }
}


// CLASSES  
// ==========================================================================
.radio {
    @extend %radio;
    @include radio-color();
    @include radio-size(32px);

    &__input {
        @extend %radio__input;
    }

    &__label {
        @extend %radio__label;
        @include radio-label-size(32px);
    }

    &__fill {
        @extend %radio__fill;
        @include radio-fill-size(32px);
    }
}


// MODIFIER CLASSES 
// ==========================================================================
// sass-lint:disable class-name-format

// SIZE MODIFIERS 
.radio_size-xsmall {
    @include radio-size(20px);

    .radio__label {
        @include radio-label-size(20px);
    }

    .radio__fill {        
        @include radio-fill-size(20px);
    }
}

.radio_size-small {
    @include radio-size(24px);

    .radio__label {
        @include radio-label-size(24px);
    }

    .radio__fill {        
        @include radio-fill-size(24px);
    }
}

.radio_size-large {
    @include radio-size(48px);

    .radio__label {
        @include radio-label-size(48px);
    }

    .radio__fill {        
        @include radio-fill-size(48px);
    }
}

.radio_size-xlarge {
    @include radio-size(64px);

    .radio__label {
        @include radio-label-size(64px);
    }

    .radio__fill {        
        @include radio-fill-size(64px);
    }
}

// COLOR MODIFIERS
.radio_color-invert {
    @include radio-color(
        $label-color: nth($pe-greyscale-color-list, 6), 
        $label-color-hover: $pe-color-white, 
        $fill-border: nth($pe-greyscale-color-list, 6), 
        $fill-border-hover: $pe-color-white, 
        $fill-color: nth($pe-primary-color-list, 3),
        $fill-shadow: nth($pe-greyscale-color-list, 1),
        $fill-before-shadow: nth($pe-greyscale-color-list, 1)
    );
} 
