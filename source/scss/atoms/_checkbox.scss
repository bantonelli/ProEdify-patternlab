// ==========================================================================
// CHECKBOX STYLES
// ==========================================================================
// BEVM STRUCTURE: checkbox, checkbox__input, checkbox__label

// PSEUDO CLASSES 
// ==========================================================================
%checkbox {
    // Base checkbox rules  
    width: 100%;
    line-height: 0;
}

%checkbox__input {
    // Base checkbox input rules
    display: none;

    // input state determines label styles  
    &:checked + .checkbox__label {
        &::before {
            opacity: 1;
        }
    }

    &:disabled + .checkbox__label {
        opacity: 0.3;
    }  
}

%checkbox__label {
    display: inline-block;
    position: relative;        
    cursor: pointer;
    vertical-align: top;

    > span {
        @include pe-font-family-forms();
    }

    &::before, 
    &::after {
        display: inline-block;
        position: absolute;               
        padding: 0;            
        vertical-align: middle;
    }

    &::before {        
        // Before is the check mark
        @include pe-transition(opacity);
        top: 0;        
        left: 0;
        font-family: 'iconic';
        text-align: center;
        content: $icon-checkmark;
        opacity: 0;
        z-index: 1;                        
    }

    &::after {            
        // After is the black box
        @include pe-transition(border, background, box-shadow);
        top: 0;
        left: 0;
        border-style: solid;        
        content: "\00a0";
        z-index: 0;
        box-sizing: border-box;
    }
}

// MIXINS
// ==========================================================================

@mixin checkbox-input-size($size) {
    &:checked + .checkbox__label {
        &::after {
            @if $size <= ($pe-base-fontsize * 1.5) {
                border-width: rem(5px);
            } @else if $size > ($pe-base-fontsize * 2) {
                border-width: rem(8px);
            } @else {            
                border-width: rem(6px);
            }
        }
    }
}

@mixin checkbox-label-size ($size) {    
    width: rem($size);
    height: rem($size);
    line-height: rem($size * 1);

    > span {
        margin-left: rem($size + 10px);
        @if $size <= ($pe-base-fontsize * 1.5) {
            @include pe-font-sizing-h7(); 
        } @else if $size > ($pe-base-fontsize * 2) {  
            @include pe-font-sizing-h4(); 
        } @else {
            @include pe-font-sizing-h6();
        }  
    }

    &::before, 
    &::after {            
        width: rem($size);
        height: rem($size);            
    }

    &::before {        
        // Before is the check mark        
        @if $size <= ($pe-base-fontsize * 1.5) {
            @include pe-font-sizing-meta-data();             
        } @else if $size > ($pe-base-fontsize * 2) {
            @include pe-font-sizing-h5();
            transition-duration: 0.15s;  
        } @else {
            @include pe-font-sizing-h7();
            transition-duration: 0.15s;
        }                               
    }

    &::after {
        @if $size <= ($pe-base-fontsize * 1.5) {             
            border-width: rem(2px); 
            //border-radius: rem(1px);
        } @else if $size > ($pe-base-fontsize * 2) {
            transition-duration: 0.15s;
            border-width: rem(4px);
            //border-radius: rem(2px);
        } @else {            
            transition-duration: 0.15s;
            border-width: rem(3px);
            //border-radius: rem(2px);
        }
    }

}

@mixin checkbox-color(
    $text: nth($pe-greyscale-color-list, 4),
    $text-hovered: $pe-color-grey,
    $text-checked: $pe-color-grey,   
    $box-border: nth($pe-greyscale-color-list, 5),
    $box-border-checked: nth($pe-primary-color-list, 3),
    $box-background: nth($pe-greyscale-color-list, 4),
    $box-background-checked: nth($pe-greyscale-color-list, 3),
    $check: nth($pe-primary-color-list, 3),
    $check-shadow: nth($pe-greyscale-color-list, 1)
) {
    .checkbox__input {
        // input state determines label styles  
        &:checked + .checkbox__label {
            &:hover > span {
                color: $text-hovered;
            }

            &::after {
                border-color: $box-border-checked;            
                background-color: $box-background-checked;            
            }
        }
    }  

    .checkbox__label {       
        > span {
            color: $text;
        }

        &:hover {
            > span {
                color: $text-hovered;
            }
        }

        &::before {        
            // Before is the check mark
            color: $check;
            text-shadow: 0 rem(1px) rem(1px) $check-shadow;
        }

        &::after {            
            // After is the black box     
            border-color: $box-border; 
            background-color: $box-background;             
        }
    }    
}

@mixin checkbox-shadow($box-shadow: nth($pe-greyscale-color-list, 2), $box-shadow-checked: nth($pe-greyscale-color-list, 1)) {
    .checkbox__input {
        // input state determines label styles  
        &:checked + .checkbox__label {
            &::after {
                box-shadow: inset 0 rem(1px) 1rem $box-shadow-checked;
            }
        }
    }  

    .checkbox__label {       
        &::after {            
            // After is the black box     
            box-shadow: inset 0 rem(1px) 2rem $box-shadow;       
        }
    }  
}

// MAIN CLASSES
// ========================================================================== 
.checkbox {
    // Base checkbox 
    @extend %checkbox;    
    @include checkbox-color(        
        $text: nth($pe-greyscale-color-list, 3),
        $text-hovered: nth($pe-greyscale-color-list, 2),
        $text-checked: nth($pe-greyscale-color-list, 2),
        $box-border: nth($pe-greyscale-color-list, 4),
        $box-border-checked: nth($pe-primary-color-list, 3),
        $box-background: transparentize(nth($pe-greyscale-color-list, 6), 0.7),
        $box-background-checked: $pe-color-white,
        $check: nth($pe-greyscale-color-list, 3),
        $check-shadow: nth($pe-greyscale-color-list, 6)
    );
    @include checkbox-shadow(
        $box-shadow: nth($pe-greyscale-color-list, 6), 
        $box-shadow-checked: $pe-color-white
    );

    .checkbox__input {
        @extend %checkbox__input;
        @include checkbox-input-size(32px);
    }

    .checkbox__label {
        @extend %checkbox__label;
        @include checkbox-label-size(32px);
    }     
}

// MODIFIER CLASSES 
// ==========================================================================
// sass-lint:disable class-name-format

// Size Modifiers
.checkbox_size-small {
    .checkbox__input {
        @include checkbox-input-size(24px);
    }

    .checkbox__label {        
        @include checkbox-label-size(24px);
    } 
}

.checkbox_size-large {
    .checkbox__input {
        @include checkbox-input-size(48px);
    }

    .checkbox__label {        
        @include checkbox-label-size(48px);
    } 
}

// Color Modifiers 
.checkbox_color-invert {
    @include checkbox-color(
        $text: nth($pe-greyscale-color-list, 6),
        $text-hovered: $pe-color-white,
        $text-checked: nth($pe-greyscale-color-list, 6),
        $box-border: $pe-color-white,
        $box-border-checked: nth($pe-primary-color-list, 3),
        $box-background: nth($pe-greyscale-color-list, 5),
        $box-background-checked: nth($pe-greyscale-color-list, 3),
        $check: $pe-color-white,
        $check-shadow: nth($pe-greyscale-color-list, 1)
    );
    @include checkbox-shadow();
}
