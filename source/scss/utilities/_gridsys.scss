// sass-lint:disable-all

// Mixin to create gridsys
// Take in container_width, gutter, and number of columns
// 1) Calculate column width: (100/num_columns) - gutter
// 2) loop to create grid classes for each breakpoint
// 3)

$size-names: ("xs", "sm", "md", "lg");
$size-vals: (480px, 768px, 992px, 1200px);

@mixin gridsys ($columns: 12, $gutter: 0.5%) {

//$col-width: 6.5%;
$total-gutter: $gutter * 11;
$remainder: 100% - $total-gutter;
$col-width: $remainder / $columns;
$counter: 1;

  @while $counter < 5 {
    @if $counter == 1 {
      @for $i from 1 through $columns {
        .gridsys-#{nth($size-names, $counter)}-#{$i} {
          //margin-left: $gutter / 2;
          box-sizing: border-box;
          float: left;
          vertical-align: middle;
          width: $col-width*$i + ($gutter * ($i - 1));
          @if $i == $columns {
            margin-right: 0;
          }
          @else {
            //margin-right: $gutter / 2;
            margin-right: $gutter;
          }
        }
      }
    }
    @else {
      @media screen and (min-width: nth($size-vals, $counter)) {
        @for $i from 1 through $columns {
          .gridsys-#{nth($size-names, $counter)}-#{$i} {
            //margin-left: $gutter / 2;
            box-sizing: border-box;
            float: left;
            vertical-align: middle;
            width: $col-width*$i + ($gutter * ($i - 1));
            @if $i == $columns {
              margin-right: 0;
            }
            @else {
              //margin-right: $gutter / 2;
              margin-right: $gutter;
            }
          }
        }
        .omega-#{nth($size-names, $counter)} {
          margin-right: 0;
        }
      }
    }
    $counter: $counter + 1;
  }

  .omega {
    margin-right: 0;
  }
  .alpha {
    margin-left: $gutter;
  }
  .content-wrapper {
    width: 90%; // width: 1000px;
    max-width: 1500px;
    margin: auto;
  }
  .row-container {
    clear: both;
    display: table;
    //width: 100% + $gutter + 0.1%;
    width: 100%;
    margin: 0;
  }
  .row-container:before, .row-container:after {
    display: table;
    content: " ";
  }
  .row-container:after {
    clear: both;
  }


.grid-offset-1 {
  margin-left: 8.5%;
  vertical-align: middle;
}


.grid-offset-2 {
  margin-left: 17%;
  vertical-align: middle;
}

.grid-offset-3 {
  margin-left: 25.5%;
  vertical-align: middle;
}

.grid-offset-4 {
  margin-left: 34%;
  vertical-align: middle;
}

.grid-offset-5 {
  margin-left: 42.5%;
  vertical-align: middle;
}

.grid-offset-6 {
  margin-left: 51%;
  vertical-align: middle;
}

.grid-offset-7 {
  margin-left: 59.5%;
  vertical-align: middle;
}


.grid-offset-8 {
  margin-left: 68%;
  vertical-align: middle;
}

.grid-offset-9 {
  margin-left: 76.5%;
  vertical-align: middle;
}

.grid-offset-10 {
  margin-left: 85%;
  vertical-align: middle;
}

.grid-offset-11 {
  margin-left: 93.5%;
  vertical-align: middle;
}

.grid-offset-12 {
  margin-left: 100%;
  vertical-align: middle;
}

}


@mixin xs {
  @media screen and (max-width: nth($size-vals, 1)) {
    @content
  }
}

@mixin sm {
  @media screen and (max-width: nth($size-vals, 2)) {
    @content
  }
}

@mixin md {
  @media screen and (max-width: nth($size-vals, 3)) {
    @content
  }
}

@mixin lg {
  @media screen and (max-width: nth($size-vals, 4)) {
    @content
  }
}

@include gridsys();