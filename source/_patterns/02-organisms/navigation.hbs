<div id="navigation" class="">
    <div id="navbar" class="navbar navigation__navbar">
        <div class="navbar__container">
            <a class="navbar__brand" href="#">
                <img 
                    class="navbar__brand-image" 
                    sizes="(max-width: 479px) 30vw, 100px" 
                    src="/images/ProEdify-Logo_FINAL.png" 
                    srcset="/images/ProEdify-Logo_FINAL-p-500.png 500w, /images/ProEdify-Logo_FINAL-p-800.png 800w, /images/ProEdify-Logo_FINAL-p-1080.png 1080w, /images/ProEdify-Logo_FINAL-p-1600.png 1600w, /images/ProEdify-Logo_FINAL.png 2470w" width="1235">
            </a>
        <div class="navbar__search">
            <pe-autocomplete
                v-model="state1"
                :fetch-suggestions="querySearch"
                :trigger-on-focus="false"
                :modifier-styles="['input_color-white']"
                icon="icon-magnifying-glass"
                placeholder="Please Input"
                @select="handleSelect"
            >
            </pe-autocomplete>          
        </div>
        <a class="navbar__notifications pe-icon-dropdown-arrow" href="#"><span class="pe-icon-bell"></span></a>
        <div class="navbar__menu-button">
            <div class="icon"></div>
        </div>
        <nav class="navbar__menu" role="navigation">
            
            <!--If Authenticated-->
                <div class="navbar__username pe-icon-dropdown-arrow">
                    <label class="" for="usermenu-toggle">
                        Really Long Username
                    </label>
                    <input type="checkbox" class="usermenu-toggle" id="usermenu-toggle"/>
                    <ul class="navbar__user-dropdown">
                        <li><a href="#">Home</a></li>
                        <li><a href="#">Settings</a></li>
                        <li><a href="#">Profile</a></li>
                        <li><a href="#">Log Out</a></li>
                    </ul>
                </div>
            <!--Else-->
                <!--<a class="navbar__auth-link" href="#">Sign Up</a>
                <a class="navbar__auth-link" href="#">Log In</a>-->
            <!--End If Authenticated-->
        </nav>
        </div>
    </div>
    <a href="" id="menuLink" class="menu-link">
        <span></span>
    </a>
    <div id="menu" class="mobile-menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="">Company</a>

            <ul class="pure-menu-list">
                <li class="pure-menu-item"><a href="" class="pure-menu-link">Home</a></li>
                <li class="pure-menu-item"><a href="" class="pure-menu-link">About</a></li>

                <li class="pure-menu-item">
                    <a href="" class="pure-menu-link">Services</a>
                </li>

                <li class="pure-menu-item"><a href="" class="pure-menu-link">Contact</a></li>
            </ul>
        </div>
    </div>
</div>

<div style="height: 100px; width: 100%; background-color: blue;">
    Stuff on Page
</div>

<script>
requirejs(['vue', 'molecules/Autocomplete/Autocomplete'], function (Vue, Autocomplete) {
    new Vue({
        el: '#navbar',
        data: function () {
            return {
                state1: ''
            }
        },
        components: {
            'pe-autocomplete': Autocomplete.default
        },
        methods: {
            querySearch(queryString, cb) {
                var links = this.links;
                // Call createFilter for every link   
                var results = queryString ? links.filter(this.createFilter(queryString)) : links;
                // call callback function to return suggestions
                cb(results);
            },
            createFilter(queryString) {
                return (link) => {
                    return (link.value.indexOf(queryString.toLowerCase()) === 0);
                };
            },
            loadAll() {
                return [
                    { "value": "vue", "link": "https://github.com/vuejs/vue" },
                    { "value": "element", "link": "https://github.com/ElemeFE/element" },
                    { "value": "cooking", "link": "https://github.com/ElemeFE/cooking" },
                    { "value": "mint-ui", "link": "https://github.com/ElemeFE/mint-ui" },
                    { "value": "vuex", "link": "https://github.com/vuejs/vuex" },
                    { "value": "vue-router", "link": "https://github.com/vuejs/vue-router" },
                    { "value": "babel", "link": "https://github.com/babel/babel" }
                ];
            },
            handleSelect(item) {
                console.log(item);
            }
        },
        mounted: function () {
            this.links = this.loadAll();
        }
    });

    var layout   = document.getElementById('navigation'),
    menu     = document.getElementById('menu'),
    menuLink = document.getElementById('menuLink');

    function toggleClass(element, className) {
        var classes = element.className.split(/\s+/),
            length = classes.length,
            i = 0;

        for(; i < length; i++) {
          if (classes[i] === className) {
            classes.splice(i, 1);
            break;
          }
        }
        // The className is not found
        if (length === classes.length) {
            classes.push(className);
        }

        element.className = classes.join(' ');
    }

    function toggleAll(e) {
        var active = 'active';

        e.preventDefault();
        toggleClass(layout, active);
        toggleClass(menu, active);
        toggleClass(menuLink, active);
    }

    menuLink.onclick = function (e) {
        toggleAll(e);
    };

    // content.onclick = function(e) {
    //     if (menu.className.indexOf('active') !== -1) {
    //         toggleAll(e);
    //     }
    // };
});
</script>     
<!--{{> molecules-autocomplete }}-->