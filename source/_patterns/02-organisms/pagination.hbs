<div id="pagination">
    <li v-for="animal in shownAnimals" 
    style="list-style: none; width: 100px; height: 50px; line-height: 48px; background-color: #123456; color: white; margin: 10px 0; text-align: center;">
        \{{ animal.name }}
    </li>
    <pagination
      @size-change="handleSizeChange"
      @current-change="handleCurrentChange"
      :current-page.sync="currentPage4"
      :page-sizes="[2, 4, 6, 8, 10]"
      :page-size="pageSize"
      layout="->, prev, jumper, pager, next"
      :total="animals.length"
      >
    </pagination>
<!--
TODO: Create modifier-styles system for pagination component.
prev: <prev></prev>,
      jumper: <jumper></jumper>,
      pager: <pager modifier-styles={["pager_size-small"]} currentPage={ this.internalCurrentPage } pageCount={ this.internalPageCount } on-change={ this.handleCurrentChange }></pager>,
      next: <next></next>,
      sizes: <sizes pageSizes={ this.pageSizes }></sizes>,
      slot: <my-slot></my-slot>,
      total: <total></total> 
-->
</div>

<script> 

var animals = {{{json animals}}};

requirejs([
  'lodash',
  'vue', 
  'organisms/Pagination/Pager', 
  'organisms/Pagination/Pagination'
], function (_, Vue, Pager, Pagination) {
    new Vue({
        el: '#pagination',
        data: function () {
            return {
                animals: animals,
                currentPage4: 1,
                pageSize: 2
            }
        },
        components: {
            'pagination': Pagination.default,
            'pager': Pager.default
        },
        computed: {
            shownAnimals: function () {
                var amountPerPage = this.pageSize;
                var startIndex = amountPerPage * (this.currentPage4 - 1);
                var endIndex = amountPerPage * this.currentPage4;
                return _.slice(this.animals, startIndex, endIndex);
            }
        },
        methods: {
            handleSizeChange: function (value) {
                this.pageSize = value;
            },
            handleCurrentChange: function () {

            }
        }
    });
});
</script>